package org.ual.hmis.blancorobles;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestLoginFailedTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void loginBad() {
    driver.get("https://hmissesion920200514114002.azurewebsites.net/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.id("Input_Email")).click();
    driver.findElement(By.id("Input_Email")).sendKeys("user3@example.com");
    driver.findElement(By.id("Input_Password")).click();
    driver.findElement(By.id("Input_Password")).sendKeys("Contrasena12/");
    driver.findElement(By.id("login-submit")).click();
    driver.findElement(By.cssSelector(".text-danger > ul")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li")).getText(), is("Invalid login attempt."));
    driver.close();
  }
  @Test
  public void loginBadEmail() {
    driver.get("https://hmissesion920200514114002.azurewebsites.net/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.id("Input_Email")).click();
    driver.findElement(By.id("Input_Email")).sendKeys("user3@example.com");
    driver.findElement(By.id("Input_Password")).click();
    driver.findElement(By.id("Input_Password")).sendKeys("Password12/");
    driver.findElement(By.id("login-submit")).click();
    driver.findElement(By.cssSelector(".text-danger > ul")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li")).getText(), is("Invalid login attempt."));
    driver.close();
  }
  @Test
  public void loginBadPassword() {
    driver.get("https://hmissesion920200514114002.azurewebsites.net/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.id("Input_Email")).click();
    driver.findElement(By.id("Input_Email")).sendKeys("user2@example.com");
    driver.findElement(By.id("Input_Password")).click();
    driver.findElement(By.id("Input_Password")).sendKeys("passwordrandom");
    driver.findElement(By.id("login-submit")).click();
    driver.findElement(By.cssSelector(".text-danger li")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li")).getText(), is("Invalid login attempt."));
    driver.close();
  }
  @Test
  public void loginEmailEmpty() {
    driver.get("https://hmissesion920200514114002.azurewebsites.net/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.id("Input_Password")).click();
    driver.findElement(By.id("Input_Password")).sendKeys("Password12/");
    driver.findElement(By.id("login-submit")).click();
    driver.findElement(By.cssSelector(".text-danger li")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li")).getText(), is("The Email field is required."));
    driver.close();
  }
  @Test
  public void loginEmpty() {
    driver.get("https://hmissesion920200514114002.azurewebsites.net/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.id("login-submit")).click();
    driver.findElement(By.cssSelector(".text-danger li:nth-child(1)")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li:nth-child(1)")).getText(), is("The Email field is required."));
    driver.findElement(By.cssSelector(".text-danger li:nth-child(2)")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li:nth-child(2)")).getText(), is("The Password field is required."));
    driver.close();
  }
  @Test
  public void loginPasswordEmpty() {
    driver.get("https://hmissesion920200514114002.azurewebsites.net/");
    driver.manage().window().setSize(new Dimension(1900, 1020));
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.id("Input_Email")).click();
    driver.findElement(By.id("Input_Email")).sendKeys("user2@example.com");
    driver.findElement(By.id("login-submit")).click();
    assertThat(driver.findElement(By.cssSelector(".text-danger li")).getText(), is("The Password field is required."));
    driver.close();
  }
}
